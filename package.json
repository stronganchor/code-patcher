{
  "name": "ai-code-patcher",
  "displayName": "AI Code Patcher",
  "description": "Apply AI-generated code changes with intelligent fuzzy matching",
  "version": "0.1.1",
  "publisher": "your-name",
  "engines": {
    "vscode": "^1.80.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onCommand:aiCodePatcher.applyPatch",
    "onCommand:aiCodePatcher.applyPatchFromClipboard",
    "onCommand:aiCodePatcher.applyPatchFromSelection"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "aiCodePatcher.applyPatch",
        "title": "AI Code Patcher: Apply Patch"
      },
      {
        "command": "aiCodePatcher.applyPatchFromClipboard",
        "title": "AI Code Patcher: Apply Patch from Clipboard"
      },
      {
        "command": "aiCodePatcher.applyPatchFromSelection",
        "title": "AI Code Patcher: Apply Patch from Selection (Scan Workspace)"
      }
    ],
    "keybindings": [
      {
        "command": "aiCodePatcher.applyPatchFromClipboard",
        "key": "ctrl+shift+v",
        "mac": "cmd+shift+v",
        "when": "editorTextFocus"
      },
      {
        "command": "aiCodePatcher.applyPatchFromSelection",
        "key": "ctrl+shift+alt+v",
        "mac": "cmd+shift+alt+v",
        "when": "editorTextFocus"
      }
    ],
    "configuration": {
      "title": "AI Code Patcher",
      "properties": {
        "aiCodePatcher.fuzzyMatch": {
          "type": "boolean",
          "default": true,
          "description": "Enable fuzzy matching for finding code blocks"
        },
        "aiCodePatcher.minConfidence": {
          "type": "number",
          "default": 0.6,
          "minimum": 0.0,
          "maximum": 1.0,
          "description": "Minimum confidence threshold for accepting matches (0.0 - 1.0)"
        },
        "aiCodePatcher.contextLines": {
          "type": "number",
          "default": 2,
          "minimum": 0,
          "maximum": 10,
          "description": "Number of context lines to show around matches"
        },
        "aiCodePatcher.autoApplySingleMatch": {
          "type": "boolean",
          "default": false,
          "description": "Automatically apply patch if only one match is found (or a clear winner is found in the workspace)"
        },
        "aiCodePatcher.includeGlobs": {
          "type": [
            "string",
            "array"
          ],
          "default": "**/*.{ts,tsx,js,jsx,mjs,cjs,php,py,rb,go,java,cs,cpp,c,h,html,css,scss,json,md,xml,yaml,yml,ini,sh,bat,ps1}",
          "description": "Glob(s) for files to search when scanning the workspace for matches"
        },
        "aiCodePatcher.excludeGlobs": {
          "type": [
            "string",
            "array"
          ],
          "default": "{**/node_modules/**,**/.git/**,**/out/**,**/dist/**,**/build/**,**/.cache/**,**/.next/**,**/.parcel-cache/**,**/.turbo/**}",
          "description": "Glob(s) to exclude when scanning the workspace"
        },
        "aiCodePatcher.maxFiles": {
          "type": "number",
          "default": 2000,
          "minimum": 1,
          "description": "Maximum number of files to scan when searching the workspace"
        },
        "aiCodePatcher.tieBreakDelta": {
          "type": "number",
          "default": 0.03,
          "minimum": 0,
          "maximum": 1,
          "description": "Confidence difference treated as a 'tie'. If top two matches are within this delta, you will be prompted to choose."
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile",
    "lint": "eslint src --ext ts"
  },
  "devDependencies": {
    "@types/node": "^18.x",
    "@types/vscode": "^1.80.0",
    "@typescript-eslint/eslint-plugin": "^5.x",
    "@typescript-eslint/parser": "^5.x",
    "eslint": "^8.x",
    "typescript": "^5.0.0"
  }
}